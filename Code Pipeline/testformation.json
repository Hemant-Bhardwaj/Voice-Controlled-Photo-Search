{
    "Description": "GorillaStack CloudFormation Sample Template VPC_With_RDS_Aurora_And_Lambda: Sample template showing how to create a private subnet in a VPC with an RDS instance and configure a lambda function to access this instance.",
    "Parameters": {
        "VPCCIDR": {
            "Type": "String",
            "Description": "IP Address range for the VPC",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "10.0.0.0/16",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "PrivateSubnetACIDR": {
            "Type": "String",
            "Description": "IP Address range for the VPN connected Subnet",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "10.0.2.0/24",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "PublicSubnetACIDR": {
            "Type": "String",
            "Description": "IP Address range for the VPN connected Subnet",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "10.0.1.0/24",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "AvailabilityZoneA": {
            "Type": "String",
            "Description": "First AvailabilityZone",
            "Default": "us-west-2a"
        },
        "AvailabilityZoneB": {
            "Type": "String",
            "Description": "Second AvailabilityZone",
            "Default": "us-west-2b"
        },
        "CodeS3Bucket": {
            "Type": "String",
            "Description": "S3 bucket in which the code is located"
        },
        "CodeS3Key": {
            "Type": "String",
            "Description": "String of path to the code zip file in the s3 bucket",
            "Default": "lambda.zip"
        },
        "EventSourceArn": {
            "Type": "String",
            "Description": "Arn of the event source we want to listen to"
        },
        "BucketName": {
            "Type": "String"
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "CidrBlock": {
                    "Ref": "VPCCIDR"
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "VPN Connected VPC"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "aeb34c96-b8a0-484d-9935-bba47d902a32"
                }
            }
        },
        "VpcSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Creating a default security group",
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "ee871149-9df6-4160-a8ba-933cbc47db09"
                }
            }
        },
        "PrivateSubnetA": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Ref": "AvailabilityZoneA"
                },
                "CidrBlock": {
                    "Ref": "PrivateSubnetACIDR"
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Subnet Type",
                        "Value": "Private"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "e8dafd73-49ff-49bf-9aae-64f20c4821d1"
                }
            }
        },
        "PublicSubnetA": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PublicSubnetACIDR"
                },
                "AvailabilityZone": {
                    "Ref": "AvailabilityZoneB"
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Subnet Type",
                        "Value": "Public"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "0ada3e39-0aa7-4e02-ae5c-04c5801c9802"
                }
            }
        },
        "VPCSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security Group for our private VPC",
                "SecurityGroupEgress": [],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        },
                        "FromPort": 3306,
                        "IpProtocol": "TCP",
                        "ToPort": 3306
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "e93fa006-7d99-4c58-8c82-94e72a93b1cf"
                }
            }
        },
        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "LambdaExecutionRolePolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:::*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:ListBucket"
                                    ],
                                    "Resource": [
                                        "arn:aws:s3:::*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:CreateNetworkInterface",
                                        "ec2:DescribeNetworkInterfaces",
                                        "ec2:DeleteNetworkInterface"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "f950121f-f104-49a5-aac0-f1a082bfaae5"
                }
            }
        },
        "AGRA3ZWAY": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "API Search Photos",
                "BodyS3Location": {
                    "Bucket": "mycloudformationhw3",
                    "Key": "swagger.yml"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "ab088e34-2843-46ff-8047-fb9681e003a1"
                }
            }
        },
        "ProcessingLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "LambdaFunction1"
                },
                "Principal": "s3.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": "arn:aws:s3:::${BucketName}"
                },
                "SourceAccount": {
                    "Ref": "AWS::AccountId"
                }
            }
        },
        "LambdaFunction1": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "mycloudformationhw3",
                    "S3Key": "lf1.zip"
                },
                "Description": "example lambda function 1 that can access VPC resources",
                "Runtime": "python3.7",
                "Handler": "lf1.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Tags": [
                    {
                        "Value": "SAM",
                        "Key": "lambda:createdBy"
                    }
                ],
                "VpcConfig": {
                    "SecurityGroupIds": [
                        {
                            "Ref": "VpcSecurityGroup"
                        }
                    ],
                    "SubnetIds": [
                        {
                            "Ref": "PublicSubnetA"
                        }
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "f5758eca-4bb2-4b2f-acf2-d4203573f082"
                }
            }
        },
        "LambdaFunction2": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "mycloudformationhw3",
                    "S3Key": "lf2.zip"
                },
                "Description": "example lambda function 2 that can access VPC resources",
                "Runtime": "python3.7",
                "Handler": "lf2.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Tags": [
                    {
                        "Value": "SAM",
                        "Key": "lambda:createdBy"
                    }
                ],
                "VpcConfig": {
                    "SecurityGroupIds": [
                        {
                            "Ref": "VpcSecurityGroup"
                        }
                    ],
                    "SubnetIds": [
                        {
                            "Ref": "PrivateSubnetA"
                        }
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "412219a1-8a43-413c-81de-1cc67ebaaf11"
                }
            }
        },
        "S3Bucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "AccessControl": "PublicRead",
        },
        "DeletionPolicy": "Retain"
      },
        "S3bucket": {
            "Type": "AWS::S3::Bucket",
            "DependsOn": [
                "ProcessingLambdaPermission"
            ],
            "Properties": {
                "BucketName": {
                    "Ref": "BucketName"
                },
                "NotificationConfiguration": {
                    "LambdaConfigurations": [
                        {
                            "Event": "s3:ObjectCreated:*",
                            "Function": {
                                "Fn::GetAtt": [
                                    "LambdaFunction1",
                                    "Arn"
                                ]
                            },
                            "Filter": {
                                "S3Key": {
                                    "Rules": [
                                        {
                                            "Name": "suffix",
                                            "Value": ".txt"
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "53e32c19-029f-4ad5-876e-8e932c6bed98"
                }
            }
        }
    },
    "Outputs": {
        "VPCId": {
            "Description": "VPCId of the newly created VPC",
            "Value": {
                "Ref": "VPC"
            }
        },
        "VpcSecurityGroup": {
            "Description": "Default security group",
            "Value": {
                "Ref": "VpcSecurityGroup"
            }
        },
        "PrivateSubnetA": {
            "Description": "SubnetId of the private subnet",
            "Value": {
                "Ref": "PrivateSubnetA"
            }
        },
        "PublicSubnetA": {
            "Description": "SubnetId of the private subnet",
            "Value": {
                "Ref": "PublicSubnetA"
            }
        },
        "LambdaFunction1": {
            "Description": "Lambda function 1 ARN",
            "Value": {
                "Fn::GetAtt": [
                    "LambdaFunction1",
                    "Arn"
                ]
            }
        },
        "LambdaFunction2": {
            "Description": "Lambda function 2 ARN",
            "Value": {
                "Fn::GetAtt": [
                    "LambdaFunction2",
                    "Arn"
                ]
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Designer": {
            "f950121f-f104-49a5-aac0-f1a082bfaae5": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 60,
                    "y": 570
                },
                "z": 1,
                "embeds": []
            },
            "aeb34c96-b8a0-484d-9935-bba47d902a32": {
                "size": {
                    "width": 510,
                    "height": 420
                },
                "position": {
                    "x": 60,
                    "y": 90
                },
                "z": 1,
                "embeds": [
                    "e93fa006-7d99-4c58-8c82-94e72a93b1cf",
                    "0ada3e39-0aa7-4e02-ae5c-04c5801c9802",
                    "e8dafd73-49ff-49bf-9aae-64f20c4821d1",
                    "ee871149-9df6-4160-a8ba-933cbc47db09"
                ]
            },
            "e93fa006-7d99-4c58-8c82-94e72a93b1cf": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 90,
                    "y": 360
                },
                "z": 2,
                "parent": "aeb34c96-b8a0-484d-9935-bba47d902a32",
                "embeds": [],
                "iscontainedinside": [
                    "aeb34c96-b8a0-484d-9935-bba47d902a32",
                    "aeb34c96-b8a0-484d-9935-bba47d902a32",
                    "aeb34c96-b8a0-484d-9935-bba47d902a32"
                ]
            },
            "0ada3e39-0aa7-4e02-ae5c-04c5801c9802": {
                "size": {
                    "width": 150,
                    "height": 150
                },
                "position": {
                    "x": 300,
                    "y": 150
                },
                "z": 2,
                "parent": "aeb34c96-b8a0-484d-9935-bba47d902a32",
                "embeds": [],
                "iscontainedinside": [
                    "aeb34c96-b8a0-484d-9935-bba47d902a32",
                    "aeb34c96-b8a0-484d-9935-bba47d902a32",
                    "aeb34c96-b8a0-484d-9935-bba47d902a32"
                ]
            },
            "e8dafd73-49ff-49bf-9aae-64f20c4821d1": {
                "size": {
                    "width": 150,
                    "height": 150
                },
                "position": {
                    "x": 90,
                    "y": 150
                },
                "z": 2,
                "parent": "aeb34c96-b8a0-484d-9935-bba47d902a32",
                "embeds": [],
                "iscontainedinside": [
                    "aeb34c96-b8a0-484d-9935-bba47d902a32",
                    "aeb34c96-b8a0-484d-9935-bba47d902a32",
                    "aeb34c96-b8a0-484d-9935-bba47d902a32"
                ]
            },
            "ee871149-9df6-4160-a8ba-933cbc47db09": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 210,
                    "y": 360
                },
                "z": 2,
                "parent": "aeb34c96-b8a0-484d-9935-bba47d902a32",
                "embeds": [],
                "iscontainedinside": [
                    "aeb34c96-b8a0-484d-9935-bba47d902a32",
                    "aeb34c96-b8a0-484d-9935-bba47d902a32",
                    "aeb34c96-b8a0-484d-9935-bba47d902a32"
                ]
            },
            "ab088e34-2843-46ff-8047-fb9681e003a1": {
                "size": {
                    "width": 150,
                    "height": 150
                },
                "position": {
                    "x": 600,
                    "y": 90
                },
                "z": 1,
                "embeds": []
            },
            "412219a1-8a43-413c-81de-1cc67ebaaf11": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 600,
                    "y": 300
                },
                "z": 1,
                "embeds": []
            },
            "f5758eca-4bb2-4b2f-acf2-d4203573f082": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 600,
                    "y": 420
                },
                "z": 1,
                "embeds": []
            },
            "53e32c19-029f-4ad5-876e-8e932c6bed98": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -330,
                    "y": 110
                },
                "z": 0
            }
        }
    }
}
